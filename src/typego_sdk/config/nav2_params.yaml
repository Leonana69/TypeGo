controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.05
    progress_checker_plugin: "progress_checker"
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.1     # meters
      movement_time_allowance: 10.0

    goal_checker_plugins: ["goal_checker"]
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.2      # (meters) Tighten XY tolerance
      yaw_goal_tolerance: 3.14      # (radians) Tighten angle tolerance
      stateful: false               # Prevents re-checking past goals

    controller_plugins: ["FollowPath"]    
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"

      # Allow high forward speed in straight open areas
      desired_linear_vel: 1.2          # top speed (used in straight open paths)
      min_approach_linear_velocity: 0.08
      
      # Collision detection
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.8

      # Cost & curvature regulation (key for corners)
      use_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 1.2   # slow aggressively on tight turns
      regulated_linear_scaling_min_speed: 0.1
      use_cost_regulated_linear_velocity_scaling: true
      cost_scaling_dist: 0.9
      cost_scaling_gain: 2.0                    # stronger braking near costs

      # Lookahead - critical for smooth turns
      use_velocity_scaled_lookahead_dist: true
      lookahead_time: 2.0
      lookahead_dist: 1.5
      min_lookahead_dist: 1.0
      max_lookahead_dist: 3.0

      # Rotation control
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_angular_vel: 5.0
      rotate_to_heading_min_angle: 0.25  # respond faster to angle mismatch
      max_angular_accel: 16.0 # angular speed = val * 0.5

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 15.0         # was 5; go 12–18 Hz
      publish_frequency: 7.5
      transform_tolerance: 0.6       # >= sensor delay so TF lookup succeeds
      observation_persistence: 0.0    # don’t keep stale obstacles around
      # ↑ This is a costmap-common param in Nav2; if your version only supports
      # per-source persistence, set it on the source block below.

      rolling_window: true
      width: 4
      height: 4
      resolution: 0.05

      # Use an accurate footprint (prefer this over robot_radius)
      footprint: "[[-0.30,-0.25],[-0.30,0.25],[0.40,0.25],[0.40,-0.25]]"

      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          data_type: "LaserScan"
          expected_update_rate: 0.11     # 10 Hz → 0.1 s (still OK if late)
          observation_persistence: 0.0  # per-source override
          clearing: true
          marking: true
          obstacle_range: 3.5
          raytrace_range: 4.5
          inf_is_valid: true

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.80          # give yourself buffer at corners
        cost_scaling_factor: 2.5         # softer falloff so RPP slows earlier

global_costmap:
  global_costmap:
    ros__parameters:
      footprint: "[[-0.3, -0.25], [-0.3, 0.25], [0.4, 0.25], [0.4, -0.25]]"
      
      plugins: ["static_layer", "inflation_layer"]
      
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 10.0
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [1.5, 0.0, 2.0]
    min_velocity: [-0.5, 0.0, -2.0]
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
    max_accel: [2.5, 0.0, 2.0]
    max_decel: [-1.5, 0.0, -2.0]
    odom_topic: "odom"
    odom_duration: 0.1
    use_realtime_priority: false
    enable_stamped_cmd_vel: false

bt_navigator:
  ros__parameters:
    default_nav_to_pose_bt_xml: $(find-pkg-share typego_sdk)/config/custom_nav_to_pose_bt.xml
    default_nav_through_poses_bt_xml: $(find-pkg-share typego_sdk)/config/custom_nav_through_pose_bt.xml
